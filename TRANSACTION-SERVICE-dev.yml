server:
  port: 5007

spring:
  data:
    mongodb:
      host: localhost
      port: 27017
      database: TransactionReadDatabase
      username: root
      password: root
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:postgresql://localhost:5432/TransactionEventStore
    initialization-mode: always
    platform: postgres
    username: root
    password: root
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      ack-mode: MANUAL_IMMEDIATE
    consumer:
      bootstrap-servers: localhost:9092
      group-id: bankApplicationConsumer
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'

services:
  customer-service:
    url: "http://localhost:5006/account-service/v1/accounts"

eureka:
  instance:
    client:
      server-url:
        default-zone: http://localhost:8761/eureka/

management:
  tracing:
    sampling:
      probability: 1.0
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

resilience4j:
  circuitbreaker:
    instances:
      TRANSACTION-SERVICE:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
